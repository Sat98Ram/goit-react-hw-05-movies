{"version":3,"file":"static/js/872.f37586c0.chunk.js","mappings":"2NACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAA8F,sBAA9F,EAAgI,wBAAhI,EAAmK,uBAAnK,EAAqM,uB,kBCCxLA,EAAW,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACxC,OACE,gBAAIC,UAAWC,EAAf,WACE,gBAAKD,UAAWC,EAAhB,SACGJ,IACC,gBACEK,IAAG,yCAAoCL,GACvCM,IAAI,QACJH,UAAWC,OAIjB,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA6BH,KAC7B,kCAAUC,UAIjB,ECeD,EA5Ba,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQN,GACLO,MAAK,SAAAC,GACJJ,EAAQI,EACT,IACAC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,EAAhB,GACX,GAAE,CAACV,KAGF,SAACa,EAAA,EAAD,CAASC,MAAM,OAAf,UACE,eAAIlB,UAAWC,EAAf,gBACGM,QADH,IACGA,OADH,EACGA,EAAMY,KAAI,SAAAC,GACT,OACE,SAACxB,EAAD,CACEC,QAASuB,EAAOC,aAChBvB,KAAMsB,EAAOtB,KACbC,KAAMqB,EAAOE,WACRF,EAAOG,QAGjB,OAIR,C,mECjCD,EAA0B,yBAA1B,EAAkE,8B,SCErDN,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOM,EAAe,EAAfA,SAC/B,OACE,oBAASxB,UAAWC,EAApB,UACE,UAACwB,EAAA,EAAD,WACGP,IAAS,eAAIlB,UAAWC,EAAf,SAAkCiB,IAC3CM,MAIR,C,+LCRDE,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,oCAQT,IAAMC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAU,uBADR,uBACjBd,EADiB,EACjBA,KADiB,kBAElBA,EAAKiB,SAFa,2CAAH,qDAKXC,EAAW,mCAAG,WAAMC,GAAN,yFACFL,EAAAA,EAAAA,IAAA,8BAAiCK,IAD/B,uBACjBnB,EADiB,EACjBA,KADiB,kBAElBA,EAAKiB,SAFa,2CAAH,sDAKXG,EAAQ,mCAAG,WAAMC,GAAN,yFACCP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,qBADD,uBACdrB,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKRF,EAAO,mCAAG,WAAMuB,GAAN,yFACEP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BADF,uBACbrB,EADa,EACbA,KADa,kBAEdA,EAAKL,MAFS,2CAAH,sDAKP2B,EAAU,mCAAG,WAAMD,GAAN,yFACDP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BADC,uBAChBrB,EADgB,EAChBA,KADgB,kBAEjBA,EAAKiB,SAFY,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/CastItem.jsx","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","services/movies-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castCard\":\"Cast_castCard__m8Shz\",\"castImg\":\"Cast_castImg__T4WbF\",\"imageWrap\":\"Cast_imageWrap__-nD7W\",\"cardText\":\"Cast_cardText__FzXsX\",\"castName\":\"Cast_castName__-i08u\"};","import css from './Cast.module.css';\n\nexport const CastItem = ({ profile, name, role }) => {\n  return (\n    <li className={css.castCard}>\n      <div className={css.imageWrap}>\n        {profile && (\n          <img\n            src={`https://image.tmdb.org/t/p/w500${profile}`}\n            alt=\"actor\"\n            className={css.castImg}\n          />\n        )}\n      </div>\n      <div className={css.cardText}>\n        <p className={css.castName}>{name}</p>\n        <p>Role: {role}</p>\n      </div>\n    </li>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getCast } from 'services/movies-service';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { Section } from 'components/Section/Section';\nimport { CastItem } from './CastItem';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    getCast(movieId)\n      .then(data => {\n        setCast(data);\n      })\n      .catch(e => console.log(e));\n  }, [movieId]);\n\n  return (\n    <Section title=\"Cast\">\n      <ul className={css.castList}>\n        {cast?.map(member => {\n          return (\n            <CastItem\n              profile={member.profile_path}\n              name={member.name}\n              role={member.character}\n              key={member.cast_id}\n            />\n          );\n        })}\n      </ul>\n    </Section>\n  );\n};\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"sectionTitle\":\"Section_sectionTitle__in2ym\"};","import { Container } from 'components/Container/Container';\nimport css from './Section.module.css';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section className={css.section}>\n      <Container>\n        {title && <h2 className={css.sectionTitle}>{title}</h2>}\n        {children}\n      </Container>\n    </section>\n  );\n};\n","import axios from 'axios';\n\nconst api_key = '5c0bf9db5346d794ef678ef6835ac9bf';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key,\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const searchMovie = async movie => {\n  const { data } = await axios.get(`/search/movie?query=${movie}`);\n  return data.results;\n};\n\nexport const getMovie = async movieID => {\n  const { data } = await axios.get(`/movie/${movieID}?language=en-US'`);\n  return data;\n};\n\nexport const getCast = async movieID => {\n  const { data } = await axios.get(`/movie/${movieID}/credits?language=en-US`);\n  return data.cast;\n};\n\nexport const getReviews = async movieID => {\n  const { data } = await axios.get(`/movie/${movieID}/reviews?language=en-US`);\n  return data.results;\n};\n"],"names":["CastItem","profile","name","role","className","css","src","alt","movieId","useParams","useState","cast","setCast","useEffect","getCast","then","data","catch","e","console","log","Section","title","map","member","profile_path","character","cast_id","children","Container","axios","api_key","getTrending","results","searchMovie","movie","getMovie","movieID","getReviews"],"sourceRoot":""}